<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>upload模块快速使用</title>
  <link rel="stylesheet" href="css/layui.css" media="all">
  <script src="layui.js" type="text/javascript" charset="utf-8"></script>
</head>
<body>
	<div class="layui-inline"> <!-- 注意：这一层元素并不是必须的 -->
	  <input type="text" class="layui-input" id="test1">
	</div>
 
<script>
	layui.use('laydate', function(){
	  var laydate = layui.laydate;
	  
	  //执行一个laydate实例
	  laydate.render({
	    elem: '#test1' //指定元素
	  });
	});
</script>

</body>
</html>
<!--elem - 绑定元素
	类型：String/DOM，默认值：无
	必填项，用于绑定执行日期渲染的元素，值一般为选择器，或DOM对象
type - 控件选择类型
	year	年选择器	只提供年列表选择
	month	年月选择器	只提供年、月选择
	date	日期选择器	可选择：年、月、日。type默认值，一般可不填
	time	时间选择器	只提供时、分、秒选择
	datetime	日期时间选择器	可选择：年、月、日、时、分、秒
range - 开启左右面板范围选择
	类型：Boolean/String，默认值：false
	如果设置 true，将默认采用 “ - ” 分割。 你也可以直接设置 分割字符。五种选择器类型均支持左右面板的范围选择。
	laydate.render({ 
	  elem: '#test'
	  ,type: 'year'
	  ,range: true //或 range: '~' 来自定义分割字符
	});
format - 自定义格式
	类型：String，默认值：yyyy-MM-dd

	通过日期时间各自的格式符和长度，来设定一个你所需要的日期格式。layDate 支持的格式如下：
	
	格式符	  说明
	yyyy	年份，至少四位数。如果不足四位，则前面补零
	y	年份，不限制位数，即不管年份多少位，前面均不补零
	MM	月份，至少两位数。如果不足两位，则前面补零。
	M	月份，允许一位数。
	dd	日期，至少两位数。如果不足两位，则前面补零。
	d	日期，允许一位数。
	HH	小时，至少两位数。如果不足两位，则前面补零。
	H	小时，允许一位数。
	mm	分钟，至少两位数。如果不足两位，则前面补零。
	m	分钟，允许一位数。
	ss	秒数，至少两位数。如果不足两位，则前面补零。
	s	秒数，允许一位数。
value - 初始值
	类型：String，默认值：new Date()
	支持传入符合format参数设定的日期格式字符，或者 new Date()
min/max - 最小/大范围内的日期时间值
	类型：string，默认值：min: '1900-1-1'、max: '2099-12-31'

	设定有限范围内的日期或时间值，不在范围内的将不可选中。这两个参数的赋值非常灵活，主要有以下几种情况：
	
	1.	如果值为字符类型，则：年月日必须用 -（中划线）分割、时分秒必须用 :（半角冒号）号分割。这里并非遵循 format 设定的格式
	2.	如果值为整数类型，且数字＜86400000，则数字代表天数，如：min: -7，即代表最小日期在7天前，正数代表若干天后
	3.	如果值为整数类型，且数字 ≥ 86400000，则数字代表时间戳，如：max: 4073558400000，即代表最大日期在：公元3000年1月1日
trigger - 自定义弹出控件的事件
	类型：String，默认值：focus，如果绑定的元素非输入框，则默认事件为：click
	//自定义事件
	laydate.render({ 
	  elem: '#test'
	  ,trigger: 'click' //采用click弹出
	})
show - 默认显示
	类型：Boolean，默认值：false

	如果设置: true，则控件默认显示在绑定元素的区域。通常用于外部事件调用控件，如：
	//外部事件调用
	lay('#test1').on('click', function(e){ //假设 test1 是一个按钮
	  laydate.render({
	    elem: '#test'
	    ,show: true //直接显示
	    ,closeStop: '#test1' //这里代表的意思是：点击 test1 所在元素阻止关闭事件冒泡。如果不设定，则无法弹出控件
	  });
	});
position - 定位方式
	abolute	绝对定位，始终吸附在绑定元素周围。默认值
	fixed	固定定位，初始吸附在绑定元素周围，不随浏览器滚动条所左右。一般用于在固定定位的弹层中使用。
	static	静态定位，控件将直接嵌套在指定容器中。 
	注意：请勿与 show 参数的概念搞混淆。show为 true 时，控件仍然是采用绝对或固定定位。而这里是直接嵌套显示
btns - 工具按钮
	类型：Array，默认值：['clear', 'now', 'confirm']

	右下角显示的按钮，会按照数组顺序排列，内置可识别的值有：clear、now、confirm
	//只显示清空和确认
	laydate.render({
	  elem: '#test'
	  ,btns: ['clear', 'confirm']
	});
lang - 语言
	类型：String，默认值：cn

	我们内置了两种语言版本：cn（中文版）、en（国际版，即英文版）。这里并没有开放自定义文字，是为了避免繁琐的配置。
theme - 主题
	类型：String，默认值：default

	我们内置了多种主题，theme的可选值有：default（默认简约）、molv（墨绿背景）、#颜色值（自定义颜色背景）、grid（格子主题）
	
	//墨绿背景主题
	laydate.render({
	  elem: '#test'
	  ,theme: 'molv'
	});
	 
	//自定义背景色主题 - 非常实用
	laydate.render({
	  elem: '#test'
	  ,theme: '#393D49'
	});
	 
	//格子主题
	laydate.render({
	  elem: '#test'
	  ,theme: 'grid'
	});
calendar - 是否显示公历节日
	类型：Boolean，默认值：false

	我们内置了一些我国通用的公历重要节日，通过设置 true 来开启。国际版不会显示。
mark - 标注重要日子
	类型：Object，默认值：无

	calendar 参数所代表的公历节日更多情况下是一个摆设。因此，我们还需要自定义标注重要日子，比如结婚纪念日？日程等？它分为以下两种：
	//标注重要日子
	var ins1 = laydate.render({
	  elem: '#test'
	  ,mark: {
	    '0-10-14': '生日'
	    ,'0-12-31': '跨年' //每年12月31日
	    ,'0-0-10': '工资' //每个月10号
	    ,'2017-8-15': '' //具体日期
	    ,'2017-8-20': '预发' //如果为空字符，则默认显示数字+徽章
	    ,'2017-8-21': '发布'
	  }
	  ,done: function(value, date){
	    if(date.year === 2017 && date.month === 8 && date.date === 15){ //点击2017年8月15日，弹出提示语
	      ins1.hint('中国人民抗日战争胜利72周年');
	    }
	  }
	});-->